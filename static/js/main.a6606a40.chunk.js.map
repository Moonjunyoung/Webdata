{"version":3,"sources":["modules/MainContainer.js","Components/SearchBar.js","Components/FailureOptionList.js","Components/FailureOptionTable.js","Containers/MainContainer.js","App.js","serviceWorker.js","modules/index.js","index.js"],"names":["pmbddatas","require","SelectedUserView","Selectedarray","PmbdData","console","log","length","sorteddata","i","Selecteditem","value","trim","j","FailureLocation","push","sort","SelectedComponentItems","item","type","SelectedFailureOptions","initialState","ComponentNameData","array","tmp","uniqdata","ComponentTypeName","_","ComponentNameDataCreate","SelectedFailureOptionDatas","MainContainer","state","action","SearchBar","ComponentName","selecteditem","data","onChange","newvalue","isMulti","name","options","map","x","label","MakeOption","className","classNamePrefix","useStyles","makeStyles","theme","button","margin","spacing","marginLeft","marginRight","marginTop","width","height","fontSize","backgroundColor","root","flexGrow","minWidth","marginBottom","input","display","padding","valueContainer","flexWrap","flex","alignItems","overflow","chip","chipFocused","emphasize","palette","grey","noOptionsMessage","singleValue","placeholder","position","left","bottom","paper","zIndex","right","divider","inputComponent","inputRef","props","ref","components","Control","children","innerProps","innerRef","selectProps","classes","TextFieldProps","TextField","fullWidth","InputProps","inputProps","Menu","Paper","square","MultiValue","Chip","tabIndex","clsx","isFocused","onDelete","removeProps","onClick","deleteIcon","NoOptionsMessage","Typography","color","Option","MenuItem","selected","component","style","fontWeight","isSelected","Placeholder","SingleValue","ValueContainer","FailureOptionList","FailureOptionitem","Seleteditems","userdata","SelectedComponentData","React","useState","single","setSingle","multi","setMulti","Failuredata","setFailuredata","useTheme","selectStyles","base","text","primary","font","NoSsr","styles","inputId","InputLabelProps","htmlFor","shrink","userSelect","totaldata","String","tmpstore","finaldata","SeletedUserFailureationData","Button","variant","tableIcons","Add","forwardRef","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","withStyles","unit","overflowX","table","maxWidth","columns","title","field","columntitle","icons","ComponentTypeID","Counter","LastChangedInVersion","DegradationMechanism","DegradationInfluence","Graphics","DegradationProgression","FailureTiming","TimeCode","DiscoveryMethods","CommonDegradation","RelativeFrequency","Strength","DefColor","NewVulnerability","RepairTime","FailWeight","InstCol","DefFailWeight","TaskMetric","Attenuation","AddToList","connect","dispatch","bindActionCreators","App","rel","href","Boolean","window","location","hostname","match","rootReducer","combineReducers","logger","createLogger","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a6606a40.chunk.js","sourcesContent":["import * as _ from \"lodash\";\r\n\r\nconst pmbddatas = require(\"../Data/pmdb.json\");\r\n\r\nconst ComponentNameDataCreate = array => {\r\n  let tmp = [];\r\n  let ComponentsName = [];\r\n  for (let i = 0; i < array.length; i++) {\r\n    let uniqdata = array[i].ComponentTypeName.trim();\r\n    tmp.push(uniqdata);\r\n  }\r\n  ComponentsName = _.uniq(tmp);\r\n  return ComponentsName;\r\n};\r\n\r\nconst SelectedUserView = (Selectedarray, PmbdData) => {\r\n  console.log(Selectedarray.length);\r\n  PmbdData = PmbdData[0];\r\n  let sorteddata = [];\r\n  for (let i = 0; i < Selectedarray.length; i++) {\r\n    let Selecteditem = Selectedarray[i].value.trim();\r\n    for (let j = 0; j < PmbdData.length; j++) {\r\n      let FailureData = PmbdData[j].FailureLocation;\r\n      if (FailureData == Selecteditem) {\r\n        sorteddata.push(PmbdData[j]);\r\n      }\r\n    }\r\n  }\r\n  sorteddata.sort();\r\n  return sorteddata;\r\n};\r\n\r\n// 액션타입 정의\r\nconst SelectedComponentItem = \"MainContainer/SelectedComponentItem\"; // 변경된값 전달\r\nconst SelectedFailureOption = \"MainContainer/SelectedFailureOption\";\r\n\r\n// 액션생성함수정의\r\nexport const SelectedComponentItems = item => ({\r\n  type: SelectedComponentItem,\r\n  item,\r\n});\r\n\r\nexport const SelectedFailureOptions = item => ({\r\n  type: SelectedFailureOption,\r\n  item,\r\n});\r\n\r\n//액션생성함수\r\n\r\n// 초기상태\r\nconst initialState = {\r\n  PmbdData: [pmbddatas],\r\n  ComponentNameData: ComponentNameDataCreate(pmbddatas),\r\n  Selecteditem: [],\r\n  SelectedFailureOptionDatas: [],\r\n};\r\n\r\n// 초기상태\r\n\r\nconst MainContainer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SelectedComponentItem:\r\n      return {\r\n        //선택시\r\n        ComponentNameData: state.ComponentNameData,\r\n        Selecteditem: action.item, // state 상태로 지정\r\n        PmbdData: state.PmbdData,\r\n        SelectedFailureOptionDatas: [],\r\n      };\r\n\r\n    case SelectedFailureOption:\r\n      return {\r\n        ComponentNameData: state.ComponentNameData,\r\n        Selecteditem: state.Selecteditem, // state 상태로 지정\r\n        SelectedFailureOptionDatas: SelectedUserView(\r\n          action.item,\r\n          state.PmbdData\r\n        ), //선택된 아이템 value\r\n        PmbdData: state.PmbdData,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default MainContainer;\r\n","import React, { useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport \"../css/SearchBar.css\";\r\n\r\nfunction MakeOption(x) {\r\n  return { value: x, label: x };\r\n}\r\nconst SearchBar = ({ ComponentName, selecteditem, data }) => {\r\n  const handleSelect = newvalue => {\r\n    selecteditem(newvalue);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Select\r\n        onChange={handleSelect}\r\n        isMulti\r\n        name=\"colors\"\r\n        options={ComponentName.map(x => MakeOption(x))}\r\n        className=\"basic-multi-select\"\r\n        classNamePrefix=\"select\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport Select from \"react-select\";\r\nimport { emphasize, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport NoSsr from \"@material-ui/core/NoSsr\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport * as _ from \"lodash\";\r\n\r\n//선택한 컴포넌트 이름 반환\r\nconst SelectedComponentData = array => {\r\n  const userdata = [];\r\n  for (let i = 0; i < array.length; i++) {\r\n    userdata.push(array[i]);\r\n  }\r\n  return userdata;\r\n};\r\n\r\n//선택한 컴포넌트 타입의 FailureOption 반환\r\nconst SeletedUserFailureationData = (array, userSelect) => {\r\n  const tmp = array[0];\r\n  let totaldata = [];\r\n  userSelect = String(userSelect.value);\r\n\r\n  let tmpstore = [];\r\n  for (let i = 0; i < tmp.length; i++) {\r\n    if (tmp[i].ComponentTypeName == userSelect) {\r\n      let uniqdata = tmp[i].FailureLocation.trim();\r\n      tmpstore.push(uniqdata);\r\n    }\r\n  }\r\n  totaldata = _.uniq(tmpstore);\r\n  let finaldata = [];\r\n  for (let i = 0; i < totaldata.length; i++) {\r\n    finaldata.push({\r\n      value: totaldata[i],\r\n      label: totaldata[i],\r\n    });\r\n  }\r\n  return finaldata;\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    marginTop: 20,\r\n    width: 807,\r\n    height: 55,\r\n    fontSize: 20,\r\n    backgroundColor: \"black\",\r\n  },\r\n\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 250,\r\n    minWidth: 290,\r\n    width: 800,\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    marginTop: 50,\r\n    marginBottom: 100,\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    padding: 0,\r\n    height: \"auto\",\r\n  },\r\n  valueContainer: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    overflow: \"hidden\",\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[300]\r\n        : theme.palette.grey[700],\r\n      0.08\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: \"absolute\",\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  divider: {\r\n    height: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  /**\r\n   * The children to be rendered.\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * Props to be passed on to the wrapper.\r\n   */\r\n  innerProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([\r\n    PropTypes.func,\r\n    PropTypes.shape({\r\n      current: PropTypes.any.isRequired,\r\n    }),\r\n  ]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  /**\r\n   * Children to render.\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * The mouse down event and the innerRef to pass down to the controller element.\r\n   */\r\n  innerProps: PropTypes.shape({\r\n    onMouseDown: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n  innerRef: PropTypes.oneOfType([\r\n    PropTypes.oneOf([null]),\r\n    PropTypes.func,\r\n    PropTypes.shape({\r\n      current: PropTypes.any.isRequired,\r\n    }),\r\n  ]).isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  /**\r\n   * The children to be rendered.\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * props passed to the wrapping element for the group.\r\n   */\r\n  innerProps: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    key: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    onMouseMove: PropTypes.func.isRequired,\r\n    onMouseOver: PropTypes.func.isRequired,\r\n    tabIndex: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  /**\r\n   * Inner ref to DOM Node\r\n   */\r\n  innerRef: PropTypes.oneOfType([\r\n    PropTypes.oneOf([null]),\r\n    PropTypes.func,\r\n    PropTypes.shape({\r\n      current: PropTypes.any.isRequired,\r\n    }),\r\n  ]).isRequired,\r\n  /**\r\n   * Whether the option is focused.\r\n   */\r\n  isFocused: PropTypes.bool.isRequired,\r\n  /**\r\n   * Whether the option is selected.\r\n   */\r\n  isSelected: PropTypes.bool.isRequired,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  const { selectProps, innerProps = {}, children } = props;\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={selectProps.classes.placeholder}\r\n      {...innerProps}\r\n    >\r\n      {children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  /**\r\n   * The children to be rendered.\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * props passed to the wrapping element for the group.\r\n   */\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography\r\n      className={props.selectProps.classes.singleValue}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  /**\r\n   * The children to be rendered.\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * Props passed to the wrapping element for the group.\r\n   */\r\n  innerProps: PropTypes.any.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return (\r\n    <div className={props.selectProps.classes.valueContainer}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  /**\r\n   * The children to be rendered.\r\n   */\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool.isRequired,\r\n  removeProps: PropTypes.shape({\r\n    onClick: PropTypes.func.isRequired,\r\n    onMouseDown: PropTypes.func.isRequired,\r\n    onTouchEnd: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper\r\n      square\r\n      className={props.selectProps.classes.paper}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  /**\r\n   * The children to be rendered.\r\n   */\r\n  children: PropTypes.element.isRequired,\r\n  /**\r\n   * Props to be passed to the menu wrapper.\r\n   */\r\n  innerProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nconst FailureOptionList = ({ data, PmbdData, selecteditem }) => {\r\n  let FailureOptionitem = [];\r\n\r\n  const Seleteditems = SelectedComponentData(data);\r\n  const [selecteddata, setselecteddata] = React.useState([]);\r\n  const [single, setSingle] = React.useState(null);\r\n  const [multi, setMulti] = React.useState(null);\r\n  const [Failuredata, setFailuredata] = React.useState([]);\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const handleChangeSingle = value => {\r\n    if (multi != null) {\r\n      //아이템 요소가 존재하면\r\n      //초기화\r\n      setMulti(null);\r\n      setFailuredata([]);\r\n    }\r\n    setSingle(value);\r\n    FailureOptionitem = SeletedUserFailureationData(PmbdData, value);\r\n    setFailuredata(FailureOptionitem);\r\n  };\r\n\r\n  const handleChangeMulti = value => {\r\n    setMulti(value);\r\n  };\r\n\r\n  const onClick = () => {\r\n    selecteditem(multi);\r\n  };\r\n\r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      \"& input\": {\r\n        font: \"inherit\",\r\n      },\r\n    }),\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n        <Select\r\n          classes={classes}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-single\"\r\n          TextFieldProps={{\r\n            label: \"Component Type Name\",\r\n            InputLabelProps: {\r\n              htmlFor: \"react-select-single\",\r\n              shrink: true,\r\n            },\r\n          }}\r\n          placeholder=\"Select ComponentName\"\r\n          options={Seleteditems}\r\n          components={components}\r\n          value={single}\r\n          onChange={handleChangeSingle}\r\n        />\r\n        <div className={classes.divider} />\r\n        <Select\r\n          classes={classes}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: \"Failure Option\",\r\n            InputLabelProps: {\r\n              htmlFor: \"react-select-multiple\",\r\n              shrink: true,\r\n            },\r\n          }}\r\n          placeholder=\"Select Failure Option\"\r\n          options={Failuredata}\r\n          components={components}\r\n          value={multi}\r\n          onChange={handleChangeMulti}\r\n          isMulti\r\n        />\r\n      </NoSsr>\r\n      <div className=\"search-container\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={onClick}\r\n        >\r\n          Search\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default FailureOptionList;\r\n","import React, { Component } from \"react\";\r\nimport { forwardRef } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"../css/FailureOptiontable.css\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst SelectedUserView = (Selectedarray, PmbdData) => {\r\n  PmbdData = PmbdData[0];\r\n  let sorteddata = [];\r\n  for (let i = 0; i < Selectedarray.length; i++) {\r\n    let Selecteditem = Selectedarray[i].value.trim();\r\n    for (let j = 0; j < PmbdData.length; j++) {\r\n      let FailureData = PmbdData[j].FailureLocation;\r\n      if (FailureData == Selecteditem) {\r\n        sorteddata.push(PmbdData[j]);\r\n      }\r\n    }\r\n  }\r\n  sorteddata.sort();\r\n  return sorteddata;\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing.unit * 3,\r\n    overflowX: \"auto\",\r\n  },\r\n  table: {\r\n    maxWidth: 50,\r\n  },\r\n});\r\n\r\nconst FailureOptionTable = ({ PmbdData, selecteditem }) => {\r\n  const [columntitle, setcolumntitle] = React.useState({\r\n    columns: [\r\n      { title: \"ComponentTypeID\", field: \"ComponentTypeID\", type: \"numeric\" },\r\n      { title: \"Counter\", field: \"Counter\", type: \"numeric\" },\r\n      { title: \"ComponentTypeName\", field: \"ComponentTypeName\" },\r\n      {\r\n        title: \"LastChangedInVersion\",\r\n        field: \"LastChangedInVersion\",\r\n        type: \"numeric\",\r\n      },\r\n      { title: \"FailureLocation\", field: \"FailureLocation\" },\r\n      { title: \"DegradationMechanism\", field: \"DegradationMechanism\" },\r\n      { title: \"DegradationInfluence\", field: \"Poor seal design\" },\r\n      { title: \"Graphics\", field: \"Graphics\" },\r\n      { title: \"DegradationProgression\", field: \"DegradationProgression\" },\r\n      { title: \"FailureTiming\", field: \"FailureTiming\" },\r\n      { title: \"TimeCode\", field: \"TimeCode\" },\r\n      { title: \"DiscoveryMethods\", field: \"DiscoveryMethods\" },\r\n      { title: \"CommonDegradation\", field: \"CommonDegradation\" },\r\n      {\r\n        title: \"RelativeFrequency\",\r\n        field: \"RelativeFrequency\",\r\n        type: \"numeric\",\r\n      },\r\n      { title: \"Strength\", field: \"Strength\", type: \"numeric\" },\r\n      { title: \"DefColor\", field: \"DefColor\" },\r\n      { title: \"NewVulnerability\", field: \"NewVulnerability\", type: \"numeric\" },\r\n      { title: \"RepairTime\", field: \"RepairTime\", type: \"numeric\" },\r\n      { title: \"FailWeight\", field: \"FailWeight\", type: \"numeric\" },\r\n      { title: \"InstCol\", field: \"InstCol\" },\r\n      { title: \"DefFailWeight\", field: \"DefFailWeight\", type: \"numeric\" },\r\n      { title: \"TaskMetric\", field: \"TaskMetric\", type: \"numeric\" },\r\n      { title: \"Attenuation\", field: \"Attenuation\", type: \"numeric\" },\r\n      { title: \"AddToList\", field: \"AddToList\", type: \"numeric\" },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <MaterialTable\r\n      icons={tableIcons}\r\n      title=\"Search Datas\"\r\n      columns={columntitle.columns}\r\n      data={selecteditem.map(item => ({\r\n        ComponentTypeID: item.ComponentTypeID,\r\n        Counter: item.Counter,\r\n        ComponentTypeName: item.ComponentTypeName,\r\n        LastChangedInVersion: item.LastChangedInVersion,\r\n        FailureLocation: item.FailureLocation,\r\n        DegradationMechanism: item.DegradationMechanism,\r\n        DegradationInfluence: item.DegradationInfluence,\r\n        Graphics: item.Graphics,\r\n        DegradationProgression: item.DegradationProgression,\r\n        FailureTiming: item.FailureTiming,\r\n        TimeCode: item.TimeCode,\r\n        DiscoveryMethods: item.DiscoveryMethods,\r\n        CommonDegradation: item.CommonDegradation,\r\n        RelativeFrequency: item.RelativeFrequency,\r\n        Strength: item.Strength,\r\n        DefColor: item.DefColor,\r\n        NewVulnerability: item.NewVulnerability,\r\n        RepairTime: item.RepairTime,\r\n        FailWeight: item.FailWeight,\r\n        InstCol: item.InstCol,\r\n        DefFailWeight: item.DefFailWeight,\r\n        TaskMetric: item.TaskMetric,\r\n        Attenuation: item.Attenuation,\r\n        AddToList: item.AddToList,\r\n      }))}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(FailureOptionTable);\r\n","import React from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { SelectedComponentItems } from \"../modules/MainContainer\";\r\nimport { SelectedFailureOptions } from \"../modules/MainContainer\";\r\n\r\nimport SearchBar from \"../Components/SearchBar\";\r\nimport FailureOptionList from \"../Components/FailureOptionList\";\r\nimport FailureOptionTable from \"../Components/FailureOptionTable\";\r\n\r\nconst MainContainer = ({\r\n  ComponentName,\r\n  SelectedComponentItems,\r\n  PmbdData,\r\n  data,\r\n  SelectedFailureOptions,\r\n  SelectedFailureOptionDatas,\r\n}) => {\r\n  return (\r\n    <>\r\n      <SearchBar\r\n        ComponentName={ComponentName}\r\n        selecteditem={SelectedComponentItems}\r\n      />\r\n      <FailureOptionList\r\n        data={data}\r\n        PmbdData={PmbdData}\r\n        selecteditem={SelectedFailureOptions}\r\n      />\r\n      <FailureOptionTable\r\n        PmbdData={PmbdData}\r\n        selecteditem={SelectedFailureOptionDatas}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n// state값들\r\nconst mapStateToProps = state => ({\r\n  PmbdData: state.MainContainer.PmbdData,\r\n  ComponentName: state.MainContainer.ComponentNameData,\r\n  data: state.MainContainer.Selecteditem,\r\n  SelectedFailureOptionDatas: state.MainContainer.SelectedFailureOptionDatas,\r\n});\r\n\r\n// 액션생성함수\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n    {\r\n      SelectedComponentItems,\r\n      SelectedFailureOptions,\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MainContainer);\r\n","import React from 'react'\nimport './css/app.css'\nimport MainContainer from './Containers/MainContainer'\nconst App = () => {\n  return (\n    <>\n      <link\n        rel='stylesheet'\n        href='https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap'\n      />\n\n      <h1 className='title'>PMBD 데이터</h1>\n      <MainContainer />\n    </>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\r\nimport MainContainer from './MainContainer' // store연결\r\n\r\nconst rootReducer = combineReducers({\r\n  MainContainer\r\n})\r\n\r\nexport default rootReducer\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport ReduxThunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport rootReducer from \"./modules\";\n\nconst logger = createLogger();\nconst store = createStore(rootReducer, applyMiddleware(logger, ReduxThunk));\n\nReactDOM.render(\n  // store 연결\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}